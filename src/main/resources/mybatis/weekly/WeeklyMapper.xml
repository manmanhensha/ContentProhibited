<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.weekly.dao.WeeklyDao">

    <select id="get" resultType="com.bootdo.weekly.domain.WeeklyDO">
		select `id`,`title`,`project`,`work_des`,`problem`,`task`,
		`priority`,status,`user_id`,`create_time`,`update_time`,`is_read`
		from weekly where id = #{value} and is_delete=0
	</select>

    <select id="getByTime" resultType="com.bootdo.weekly.domain.WeeklyDO">
        select `id`,`title`,`project`,`work_des`,`problem`,`task`,
        `priority`,status,`user_id`,`create_time`,`update_time`,`is_read`
        from weekly
        <where>
            create_time = #{saveTime}
            <if test="userId != null and userId != ''">and user_id = #{userId}</if>
            and is_delete=0
        </where>
    </select>

    <select id="list" resultType="com.bootdo.weekly.vo.WeeklyVO">
        select weekly.id,`name`,`title`,`project`,`work_des`,`problem`,`task`,`is_read`,
        `priority`,weekly.status,weekly.user_id,`create_time`,`update_time` from weekly
        join sys_user
        on weekly.user_id=sys_user.user_id
        <where>
            <if test="id != null and id != ''">and weekly.id = #{id}</if>
            <if test="userId != null and userId != ''">and weekly.user_id = #{userId}</if>
            <if test="beginTime != null and beginTime != ''">
                and create_time between #{beginTime} and #{endTime}
            </if>
            <if test="name != null and name != ''">and weekly.user_id = (
                select sys_user.user_id from sys_user where sys_user.name=#{name})
            </if>
            and is_delete=0
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by create_time desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="listPerson" resultType="com.bootdo.weekly.vo.WeeklyVO">
        select weekly.id,`name`,`title`,`project`,`work_des`,`problem`,`task`,`is_read`,
        `priority`,weekly.status,weekly.user_id,`create_time`,`update_time`from weekly
        join sys_user
        on weekly.user_id=sys_user.user_id
        <where>
            <if test="userId != null and userId != ''">weekly.user_id = #{userId}</if>
            <if test="name != null and name != ''">and weekly.user_id = (
                select sys_user.user_id from sys_user where sys_user.name=#{name})
            </if>
            <if test="beginTime != null and beginTime != ''">
                and create_time between #{beginTime} and #{endTime}
            </if>
            and is_delete=0
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by create_time desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="listWeekly" resultType="com.bootdo.weekly.vo.WeeklyVO">
		select `id`,`title`,`project`,`work_des`,`problem`,`task`,
  		`priority`,status,`user_id`,`create_time`,`update_time`,`is_read`
		from weekly
		where user_id=#{userId}
		and is_delete=0
	</select>

    <select id="count" resultType="int">
        select count(*) from weekly
        join sys_user
        on weekly.user_id=sys_user.user_id
        <where>
            <if test="id != null and id != ''">and weekly.id = #{id}</if>
            <if test="userId != null and userId != ''">and weekly.user_id = #{userId}</if>
            <if test="beginTime != null and beginTime != ''">
                and create_time between #{beginTime} and #{endTime}
            </if>
            <if test="name != null and name != ''">and weekly.user_id = (
                select sys_user.user_id from sys_user where sys_user.name=#{name})
            </if>
            and is_delete=0
        </where>
    </select>

    <select id="countPerson" resultType="java.lang.Integer">
        select count(*) from weekly
        join sys_user
        on weekly.user_id=sys_user.user_id
        <where>
            <if test="userId != null and userId != ''">weekly.user_id = #{userId}</if>
            <if test="name != null and name != ''">and weekly.user_id = (
                select sys_user.user_id from sys_user where sys_user.name=#{name})
            </if>
            <if test="beginTime != null and beginTime != ''">
                and create_time between #{beginTime} and #{endTime}
            </if>
            and is_delete=0
        </where>
    </select>

    <insert id="save" parameterType="com.bootdo.weekly.domain.WeeklyDO" useGeneratedKeys="true" keyProperty="id">
		insert into weekly
		(
			`id`,
			`title`,
			`project`,
			`work_des`,
			`problem`,
			`task`,
			`priority`,
			`status`,
			`user_id`,
			`create_time`, 
			`update_time`
		)
		values
		(
			#{id},
			#{title},
			#{project},
			#{workDes},
			#{problem},
			#{task},
			#{priority},
			#{status},
			#{userId},
			#{createTime},
			#{updateTime}
		  )
	</insert>

    <update id="update" parameterType="com.bootdo.weekly.domain.WeeklyDO">
        update weekly
        <set>
            <if test="title != null">`title` = #{title},</if>
            <if test="project != null">`project` = #{project},</if>
            <if test="workDes != null">`work_des` = #{workDes},</if>
            <if test="problem != null">`problem` = #{problem},</if>
            <if test="task != null">`task` = #{task},</if>
            <if test="priority != null">`priority` = #{priority},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="userId != null">`user_id` = #{userId},</if>
            <if test="isRead != null">`is_read` = #{isRead},</if>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="updateTime != null">`update_time` = #{updateTime}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="remove">
        update weekly
        <set>
            `is_delete` = 1
        </set>where id = #{value}
    </delete>

    <delete id="batchRemove">
        update weekly
        <set>
            `is_delete` = 1
        </set>
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>